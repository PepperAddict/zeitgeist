{"version":3,"file":"index-bundled-style.css","mappings":"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","sources":["webpack://graphql-chat/./frontend/styles/app.styl","webpack://graphql-chat/./node_modules/stylus/lib/functions/index.styl","webpack://graphql-chat/./frontend/styles/room.styl","webpack://graphql-chat/./frontend/styles/columns.styl"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+Display&display=swap');\r\nhtml,\r\nbody,\r\n#root, #app {\r\n  margin: 0;\r\n  padding: 0;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\nbody {\r\n    font-family: 'Noto Serif Display', serif;\r\n    background: linear-gradient(155deg, #ffffff 20%, #a5a3a3);\r\n    color: #101015;\r\n}\r\n.mode-container\r\n    // position: fixed;\r\n    // left: 0;\r\n    // top: 0;\r\n    // z-index: -1;\r\n    width: 100%;\r\n    height: 100vw;\r\ncanvas \r\n    position: relative;\r\n    width: 100vw !important;\r\n    height: 100vh !important;\r\n\r\n.home-container \r\n    width: 100%;\r\n    margin: auto;\r\n    overflow:hidden;\r\n    box-sizing: border-box;\r\n    display: grid;\r\n    place-content: center;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 0px;\r\nform \r\n    display: grid;\r\n    padding: 20px 0;\r\n    width: 500px;\r\n    button \r\n        justify-self: end;\r\n        margin: 0px;\r\n        border-radius: 5px;\r\n        @media screen and (max-width: 600px) \r\n            position: relative;\r\n            margin: 10px 0;\r\n    p  \r\n    input \r\n        width: 100%;\r\n        height: 50px;\r\n        border: 1px dotted #ccc;\r\n        border-radius: 5px;\r\n        padding: 5px;\r\n        box-sizing: border-box;\r\n        font-size: 18px;\r\n        margin: 0 0 10px;\r\n        outline: 1px solid #ccc;\r\n\r\nbutton \r\n    height: 40px;\r\n    width: 150px;\r\n    margin: 5px 0;\r\n    float: right;\r\n    cursor: pointer;\r\n    background: #00B0FF;;\r\n    color: white;\r\n    border: 0px;\r\n    font-weight: bold;\r\n    font-size: 1.5 rem;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    text-transform: uppercase;\r\n    transition: .3s;\r\n    letter-spacing: 5px;\r\n    &:hover \r\n        background: #009BE1;\r\n        transition: .3s;\r\n\r\n.logo \r\n    width: 150px;\r\n    position: absolute;\r\n    top: -90px;\r\n    z-index: 4;\r\n    right: 0;\r\n.boxContainer \r\n    display: flex;\r\n    position: relative;\r\n    max-width: 800px;\r\n    width: 100vw;\r\n    form \r\n        position: absolute;\r\n        transform: translateX(-50%) translateY(-50%);\r\n        top: 50%;\r\n        left: 50%;\r\n.box1\r\n    width: 50%;\r\n    height: 300px;\r\n    background: #00B0FF;\r\n    box-shadow: 13px 3px 30px rgba(0, 0, 0, 0.2);\r\n    margin-top: -50px\r\n    position: relative;\r\n    span\r\n        position: absolute;\r\n        bottom: 10px;\r\n        right: 10px;\r\n        color: white;\r\n        letter-spacing: 5px;\r\n        font-family: Arial, Helvetica, sans-serif\r\n.box2 \r\n    width: 50%;\r\n    height: 300px;\r\n    box-shadow: 13px 3px 30px rgba(0, 0, 0, 0.2);\r\n    background: white;\r\n    position: relative;\r\n    span \r\n        position: absolute;\r\n        top: 10px;\r\n        color: #00B0FF;\r\n        left: 10px;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        letter-spacing: 5px;","called-from = ()\n\nvendors = moz webkit o ms official\n\n// stringify the given arg\n\n-string(arg)\n  type(arg) + ' ' + arg\n\n// require a color\n\nrequire-color(color)\n  unless color is a 'color'\n    error('RGB or HSL value expected, got a ' + -string(color))\n\n// require a unit\n\nrequire-unit(n)\n  unless n is a 'unit'\n    error('unit expected, got a ' + -string(n))\n\n// require a string\n\nrequire-string(str)\n  unless str is a 'string' or str is a 'ident'\n    error('string expected, got a ' + -string(str))\n\n// Math functions\n\nabs(n) { math(n, 'abs') }\nmin(a, b) { a < b ? a : b }\nmax(a, b) { a > b ? a : b }\n\n// Trigonometrics\nPI = -math-prop('PI')\n\nradians-to-degrees(angle)\n  angle * (180 / PI)\n\ndegrees-to-radians(angle)\n  angle * (PI / 180)\n\nsin(n)\n  n = unit(n) == 'deg' ? degrees-to-radians(unit(n, '')) : unit(n, '')\n  round(math(n, 'sin'), 9)\n\ncos(n)\n  n = unit(n) == 'deg' ? degrees-to-radians(unit(n, '')) : unit(n, '')\n  round(math(n, 'cos'), 9)\n\n// Rounding Math functions\n\nceil(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'ceil') / multiplier\n\nfloor(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'floor') / multiplier\n\nround(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'round') / multiplier\n\n// return the sum of the given numbers\n\nsum(nums)\n  sum = 0\n  sum += n for n in nums\n\n// return the average of the given numbers\n\navg(nums)\n  sum(nums) / length(nums)\n\n// return a unitless number, or pass through\n\nremove-unit(n)\n  if typeof(n) is \"unit\"\n    unit(n, \"\")\n  else\n    n\n\n// convert a percent to a decimal, or pass through\n\npercent-to-decimal(n)\n  if unit(n) is \"%\"\n    remove-unit(n) / 100\n  else\n    n\n\n// check if n is an odd number\n\nodd(n)\n  1 == n % 2\n\n// check if n is an even number\n\neven(n)\n  0 == n % 2\n\n// check if color is light\n\nlight(color)\n  lightness(color) >= 50%\n\n// check if color is dark\n\ndark(color)\n  lightness(color) < 50%\n\n// desaturate color by amount\n\ndesaturate(color, amount)\n  adjust(color, 'saturation', - amount)\n\n// saturate color by amount\n\nsaturate(color = '', amount = 100%)\n  if color is a 'color'\n    adjust(color, 'saturation', amount)\n  else\n    unquote( \"saturate(\" + color + \")\" )\n\n// darken by the given amount\n\ndarken(color, amount)\n  adjust(color, 'lightness', - amount)\n\n// lighten by the given amount\n\nlighten(color, amount)\n  adjust(color, 'lightness', amount)\n\n// decrease opacity by amount\n\nfade-out(color, amount)\n  color - rgba(black, percent-to-decimal(amount))\n\n// increase opacity by amount\n\nfade-in(color, amount)\n  color + rgba(black, percent-to-decimal(amount))\n\n// spin hue by a given amount\n\nspin(color, amount)\n  color + unit(amount, deg)\n\n// mix two colors by a given amount\n\nmix(color1, color2, weight = 50%)\n  unless weight in 0..100\n    error(\"Weight must be between 0% and 100%\")\n\n  if length(color1) == 2\n    weight = color1[0]\n    color1 = color1[1]\n\n  else if length(color2) == 2\n    weight = 100 - color2[0]\n    color2 = color2[1]\n\n  require-color(color1)\n  require-color(color2)\n\n  p = unit(weight / 100, '')\n  w = p * 2 - 1\n\n  a = alpha(color1) - alpha(color2)\n\n  w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2\n  w2 = 1 - w1\n\n  channels = (red(color1) red(color2)) (green(color1) green(color2)) (blue(color1) blue(color2))\n  rgb = ()\n\n  for pair in channels\n    push(rgb, floor(pair[0] * w1 + pair[1] * w2))\n\n  a1 = alpha(color1) * p\n  a2 = alpha(color2) * (1 - p)\n  alpha = a1 + a2\n\n  rgba(rgb[0], rgb[1], rgb[2], alpha)\n\n// invert colors, leave alpha intact\n\ninvert(color = '')\n  if color is a 'color'\n    rgba(#fff - color, alpha(color))\n  else\n    unquote( \"invert(\" + color + \")\" )\n\n// give complement of the given color\n\ncomplement( color )\n  spin( color, 180 )\n\n// give grayscale of the given color\n\ngrayscale( color = '' )\n  if color is a 'color'\n    desaturate( color, 100% )\n  else\n    unquote( \"grayscale(\" + color + \")\" )\n\n// mix the given color with white\n\ntint( color, percent )\n  mix( white, color, percent )\n\n// mix the given color with black\n\nshade( color, percent )\n  mix( black, color, percent )\n\n// return the last value in the given expr\n\nlast(expr)\n  expr[length(expr) - 1]\n\n// return keys in the given pairs or object\n\nkeys(pairs)\n  ret = ()\n  if type(pairs) == 'object'\n    for key in pairs\n      push(ret, key)\n  else\n    for pair in pairs\n      push(ret, pair[0]);\n  ret\n\n// return values in the given pairs or object\n\nvalues(pairs)\n  ret = ()\n  if type(pairs) == 'object'\n    for key, val in pairs\n      push(ret, val)\n  else\n    for pair in pairs\n      push(ret, pair[1]);\n  ret\n\n// join values with the given delimiter\n\njoin(delim, vals...)\n  buf = ''\n  vals = vals[0] if length(vals) == 1\n  for val, i in vals\n    buf += i ? delim + val : val\n\n// add a CSS rule to the containing block\n\n// - This definition allows add-property to be used as a mixin\n// - It has the same effect as interpolation but allows users\n//   to opt for a functional style\n\nadd-property-function = add-property\nadd-property(name, expr)\n  if mixin\n    {name} expr\n  else\n    add-property-function(name, expr)\n\nprefix-classes(prefix)\n  -prefix-classes(prefix, block)\n\n// Caching mixin, use inside your functions to enable caching by extending.\n\n$stylus_mixin_cache = {}\ncache()\n  $key = (current-media() or 'no-media') + '__' + called-from[0] + '__' + arguments\n  if $key in $stylus_mixin_cache\n    @extend {\"$cache_placeholder_for_\" + $stylus_mixin_cache[$key]}\n  else if 'cache' in called-from\n    {block}\n  else\n    $id = length($stylus_mixin_cache)\n\n    &,\n    /$cache_placeholder_for_{$id}\n      $stylus_mixin_cache[$key] = $id\n      {block}\n\n// Percentage function to convert a number, e.g. \".45\", into a percentage, e.g. \"45%\"\n\npercentage(num)\n  return unit(num * 100, '%')\n\n// Returns the position of a `value` within a `list`\n\nindex(list, value)\n  for val, i in list\n    return i if val == value\n",".main-container \r\n    width: 100%;\r\n    font-size: 1.2rem;\r\n    padding: 30px;\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    top: 0px;\r\n    display: grid;\r\n    grid-gap: 10px;\r\n    align-items: start;\r\n    @media screen and (min-width: 1040px) \r\n       display: grid;\r\n\r\n.navigation-container \r\n    .active \r\n        background: hotpink;\r\n\r\n.chat-container\r\n    counter-reset: item-counter;\r\n    column-gap: 0;\r\n    @media screen and (max-width: 600px) \r\n        display: grid;\r\n    p \r\n        break-inside: avoid;\r\n        margin: 5px 0 10px;\r\n        padding: 10px;\r\n        border: 1px solid #ccc;\r\n        font-size: 1rem;\r\n        background: #FFFCE6;\r\n        box-shadow: 3px 3px 30px rgba(0, 0, 0, 0.2);\r\n        color: #656565;\r\n        font-weight: normal;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        \r\n    .img-container \r\n        display: flex;\r\n        position: relative;\r\n        break-inside: avoid;\r\n        padding: 5px;\r\n        border: 1px solid #ccc;\r\n        margin: 5px;\r\n        border-radius: 5px;\r\n        strong \r\n            position: absolute;\r\n            top: 5px;\r\n            left: 5px;\r\n            z-index: 2;\r\n            background: rgba(255, 255, 255, 0.8);\r\n            width: auto;\r\n            box-sizing: border-box;\r\n            padding: 15px;\r\n            border-radius: 20%;\r\n    img \r\n        display: flex;\r\n        width: 100%;\r\n        overflow: hidden;\r\n        padding: 5px;\r\n        object-fit: cover;\r\n    .chat\r\n        position: relative;\r\n        span \r\n            position: absolute;\r\n            right: 0px;\r\n            top: 0px;\r\n            width: 40px;\r\n            height: 40px;\r\n            color: #ff7474;\r\n            cursor: pointer;\r\n            display: grid;\r\n            place-items: center;\r\n\r\n.clear \r\n    position: fixed;\r\n    bottom: 0px;\r\n    right: 0px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    cursor: pointer;",".column-container\r\n    padding: 30px 15px;\r\n    h2 \r\n        letter-spacing: 2px;\r\n        padding: 10px;\r\n        border-bottom: 1px dotted lightgray;\r\n        background: rgba(255, 255, 255, 0.5);\r\n    button\r\n        background: white;\r\n    textarea \r\n        border-radius: 0px;\r\n        width: 100%;\r\n        height: 50px;\r\n        padding: 5px;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        border: 1px solid white;\r\n        box-sizing: border-box;\r\n        border-radius: 2px;\r\n    textarea::placeholder\r\n        font-family: Arial, Helvetica, sans-serif;\r\n    textarea:focus-visible\r\n        outline: 0px;\r\n        box-shadow: 13px 3px 30px rgba(0, 0, 0, 0.2);\r\n\r\n\r\n.tabs-container \r\n    width: 100%;\r\n    grid-template-columns: repeat(3, 150px);\r\n    display: grid;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    grid-gap: 10px;\r\n    .tab \r\n        padding: 15px;\r\n        color: white;\r\n        cursor: pointer;\r\n        font-weight: 600;\r\n        letter-spacing: 2px;\r\n        text-align: center;\r\n    \r\n.listeningContainer \r\n    font-family: Arial, Helvetica, sans-serif;\r\n    background: rgba(255, 255, 255, 0.5);\r\n    box-sizing: border-box;\r\n    font-weight: 600;\r\n    margin-bottom: 10px;\r\n    color: white;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    span \r\n        padding: 10px;\r\n        box-sizing: border-box;\r\n    span.sayThis\r\n        color: white;\r\n        font-weight: 800;\r\n    .active \r\n        animation: pulse 5s ease-out infinite;\r\n        width: 100%;\r\n        display: block;\r\n        padding: 5px;\r\n\r\n\r\n.col-START\r\n    background: #00B0FF\r\n    button \r\n        color: #00B0FF\r\n    textarea::placeholder\r\n        color: #0071a4\r\n.col-STOP\r\n    background: #FF476D\r\n    button\r\n        color: #FF476D\r\n    textarea::placeholder \r\n        color: #FF476D\r\n.col-CONTINUE\r\n    background: #00D687\r\n    button \r\n        color: #00D687\r\n    textarea::placeholder \r\n        color: #00D687\r\n\r\n\r\n@keyframes pulse \r\n    0% \r\n        background-color: #606060;\r\n    50%\r\n        background-color: #2f2f2f;\r\n    100%\r\n        background-color: #606060;\r\n"],"names":[],"sourceRoot":""}